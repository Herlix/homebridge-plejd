// Generated by https://quicktype.io

export interface Site {
  site: SiteSite;
  plejdMesh: PlejdMesh;
  rooms: Room[];
  scenes: Scene[];
  devices: Device[];
  plejdDevices: PlejdDevice[];
  gateways: Gateway[];
  resourceSets: ResourceSet[];
  timeEvents: any[];
  sceneSteps: SceneStep[];
  astroEvents: AstroEvent[];
  inputSettings: InputSetting[];
  outputSettings: OutputSetting[];
  motionSensors: any[];
  stateTimers: StateTimers;
  sitePermission: SitePermission;
  inputAddress: { [key: string]: { [key: string]: number } };
  outputAddress: OutputAddress;
  deviceAddress: { [key: string]: number };
  outputGroups: OutputGroups;
  roomAddress: { [key: string]: number };
  sceneIndex: { [key: string]: number };
  deviceLimit: number;
}

export interface AstroEvent {
  dirtyDevices: any[];
  dirtyRemovedDevices: any[];
  version: number;
  deviceId: string;
  siteId: string;
  sceneId: string;
  fadeTime: number;
  activated: boolean;
  astroEventId: string;
  index: number;
  pauseStart: string;
  pauseEnd: string;
  sunriseOffset: number;
  sunsetOffset: number;
  createdAt: string;
  updatedAt: string;
  dirtyRemove: boolean;
  ACL: PurpleACL;
  targetDevices: TargetDevice[];
  objectId: string;
  __type: PurpleType;
  className: string;
}

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface PurpleACL {}

export enum PurpleType {
  Object = 'Object',
}

export interface TargetDevice {
  deviceId: string;
  index: number;
}

export interface Device {
  deviceId: string;
  siteId: string;
  title: string;
  traits: number;
  hiddenFromRoomList: boolean;
  roomId: string;
  createdAt: string;
  updatedAt: string;
  hiddenFromIntegrations: boolean;
  outputType: OutputType;
  ACL: PurpleACL;
  objectId: string;
  __type: PurpleType;
  className: DeviceClassName;
}

export enum DeviceClassName {
  Device = 'Device',
}

export enum OutputType {
  Light = 'LIGHT',
}

export interface Gateway {
  title: string;
  deviceId: string;
  siteId: string;
  hardwareId: string;
  installer: ObjectID;
  firmware: number;
  firmwareObject: Firmware;
  dirtyInstall: boolean;
  dirtyUpdate: boolean;
  createdAt: string;
  updatedAt: string;
  resourceSetId: string;
  ACL: PurpleACL;
  objectId: string;
  __type: PurpleType;
  className: string;
}

export interface Firmware {
  notes: string;
  createdAt: string;
  updatedAt: string;
  data: Data;
  metaData: Data;
  version: string;
  buildTime: number;
  firmwareApi: string;
  ACL: PurpleACL;
  objectId: string;
  __type: PurpleType;
  className: string;
}

export interface Data {
  __type: DataType;
  name: string;
  url: string;
}

export enum DataType {
  File = 'File',
}

export enum ObjectID {
  BcKqEZhBlZ = 'BcKqEZhBlZ',
  D4Dw87Hq21 = 'D4DW87HQ21',
  DtkZ3Ev3DI = 'dtkZ3Ev3DI',
  LjUH1MRUUa = 'LjUH1mRUUa',
  OTNDhFmsnJ = 'oTNDhFmsnJ',
}

export interface InputSetting {
  deviceId: string;
  siteId: string;
  input: number;
  buttonType: ButtonType;
  dimSpeed: number;
  doubleSidedDirectionButton: boolean;
  createdAt: string;
  updatedAt: string;
  doubleClick?: null | string;
  ACL: PurpleACL;
  objectId: string;
  __type: PurpleType;
  className: InputSettingClassName;
}

export enum ButtonType {
  PushButton = 'PushButton',
}

export enum InputSettingClassName {
  PlejdDeviceInputSetting = 'PlejdDeviceInputSetting',
}

export interface OutputAddress {
  CCDE6AD41DBC: OutputAddressCCDE6AD41DBC;
  DC01D128C5D2: { [key: string]: number };
  C33158BCB49E: { [key: string]: number };
  D22C85B6CB62: { [key: string]: number };
  D47538555D61: { [key: string]: number };
  EF70405719AC: { [key: string]: number };
}

export interface OutputAddressCCDE6AD41DBC {
  '0': number;
}

export interface OutputGroups {
  C33158BCB49E: { [key: string]: number[] };
  CCDE6AD41DBC: OutputGroupsCCDE6AD41DBC;
  D22C85B6CB62: { [key: string]: number[] };
  D47538555D61: { [key: string]: number[] };
  DC01D128C5D2: { [key: string]: number[] };
  EF70405719AC: { [key: string]: number[] };
}

export interface OutputGroupsCCDE6AD41DBC {
  '0': number[];
}

export interface OutputSetting {
  deviceId: string;
  siteId: string;
  output: number;
  deviceParseId: string;
  dimMin: number;
  dimMax: number;
  dimStart: number;
  dimCurve: DimCurve;
  outputSpeed: number;
  outputStartTime: number;
  curveRectification: boolean;
  curveLogarithm: number;
  curveSinusCompensation: number;
  bootState: BootState;
  createdAt: string;
  updatedAt: string;
  predefinedLoad: PredefinedLoad;
  ACL: PurpleACL;
  objectId: string;
  __type: PurpleType;
  className: OutputSettingClassName;
}

export enum BootState {
  UseLast = 'UseLast',
}

export enum OutputSettingClassName {
  PlejdDeviceOutputSetting = 'PlejdDeviceOutputSetting',
}

export enum DimCurve {
  LinearLogarithmicSlidingProportion = 'LinearLogarithmicSlidingProportion',
}

export interface PredefinedLoad {
  updatedAt: string;
  createdAt: string;
  loadType: LoadType;
  predefinedLoadData: string;
  defaultDimCurve: PlejdMeshClass;
  description_en: DescriptionEn;
  title_en: TitleEn;
  title_sv: TitleSv;
  description_sv: DescriptionSv;
  titleKey: TitleKey;
  descriptionKey: DescriptionKey;
  allowedDimCurves: AllowedDimCurves;
  ACL: PredefinedLoadACL;
  objectId: PredefinedLoadObjectID;
  __type: PurpleType;
  className: PredefinedLoadClassName;
}

export interface PredefinedLoadACL {
  '*': Empty;
}

export interface Empty {
  read: boolean;
}

export interface AllowedDimCurves {
  __type: AllowedDimCurvesType;
  className: AllowedDimCurvesClassName;
}

export enum AllowedDimCurvesType {
  Relation = 'Relation',
}

export enum AllowedDimCurvesClassName {
  DimCurve = 'DimCurve',
  PlejdMesh = 'PlejdMesh',
  Site = 'Site',
  User = '_User',
  UserProfile = 'UserProfile',
}

export enum PredefinedLoadClassName {
  PredefinedLoad = 'PredefinedLoad',
}

export interface PlejdMeshClass {
  __type: SiteType;
  className: AllowedDimCurvesClassName;
  objectId: ObjectID;
}

export enum SiteType {
  Pointer = 'Pointer',
}

export enum DescriptionKey {
  TrailingDescription = 'TrailingDescription',
  TrailingDim02Description = 'TrailingDim02Description',
}

export enum DescriptionEn {
  The230VIncandescentHalogenElectronicTransformatorMax100W = '230V Incandescent / Halogen, Electronic transformator - Max 100W',
  The230VIncandescentHalogenElectronicTransformatorMax300W = '230V Incandescent / Halogen, Electronic transformator - Max 300W',
}

export enum DescriptionSv {
  The230VDimbarLEDLjusk채llaMax100VA = '230V dimbar LED ljusk채lla - Max 100VA',
  The230VDimbarLEDLjusk채llaMax200VA = '230V dimbar LED ljusk채lla - Max 200VA',
}

export enum LoadType {
  TrailingEdge = 'Trailing Edge',
  TrailingEdgeDim02 = 'Trailing Edge Dim02',
}

export enum PredefinedLoadObjectID {
  The6NawurOZ7M = '6nawurOZ7m',
  The7ES04HWWfG = '7ES04HWWfG',
}

export enum TitleKey {
  TrailingDim02Title = 'TrailingDim02Title',
  TrailingTitle = 'TrailingTitle',
}

export enum TitleEn {
  LEDTrailingEdgeCommon = 'LED Trailing Edge (Common)',
}

export enum TitleSv {
  LEDBakkantVanligast = 'LED Bakkant (Vanligast)',
}

export interface PlejdDevice {
  deviceId: string;
  siteId: string;
  installer: PlejdMeshClass;
  dirtyInstall: boolean;
  dirtyUpdate: boolean;
  dirtyClock: boolean;
  dirtySettings: boolean;
  hardwareId: string;
  faceplateId: string;
  firmware: Firmware;
  createdAt: string;
  updatedAt: string;
  coordinates: Coordinates;
  predefinedLoad: PredefinedLoad;
  diagnostics?: string;
  ACL: PurpleACL;
  objectId: string;
  __type: PurpleType;
  className: string;
}

export interface Coordinates {
  __type: string;
  latitude: number;
  longitude: number;
}

export interface PlejdMesh {
  siteId: string;
  plejdMeshId: string;
  meshKey: string;
  cryptoKey: string;
  createdAt: string;
  updatedAt: string;
  site: PlejdMeshClass;
  ACL: PurpleACL;
  objectId: ObjectID;
  __type: PurpleType;
  className: AllowedDimCurvesClassName;
}

export interface ResourceSet {
  scopes: string[];
  remoteAccessUsers: ObjectID[];
  name: string;
  type: string;
  createdAt: string;
  updatedAt: string;
  ACL: PurpleACL;
  objectId: string;
  __type: PurpleType;
  className: string;
}

export interface Room {
  siteId: string;
  roomId: string;
  title: string;
  category: string;
  imageHash: number;
  createdAt: string;
  updatedAt: string;
  ACL: PurpleACL;
  objectId: string;
  __type: PurpleType;
  className: string;
}

export interface SceneStep {
  sceneId: string;
  siteId: string;
  deviceId: string;
  state: string;
  value: number;
  dirty: boolean;
  dirtyRemoved: boolean;
  output: number;
  createdAt: string;
  updatedAt: string;
  ACL: PurpleACL;
  objectId: string;
  __type: PurpleType;
  className: string;
}

export interface Scene {
  title: string;
  sceneId: string;
  siteId: string;
  hiddenFromSceneList: boolean;
  settings: string;
  createdAt: string;
  updatedAt: string;
  ACL: PurpleACL;
  objectId: string;
  __type: PurpleType;
  className: string;
}

export interface SiteSite {
  previousOwners: ObjectID[];
  title: string;
  siteId: string;
  version: number;
  createdAt: string;
  updatedAt: string;
  plejdMesh: PlejdMeshClass;
  astroTable: AstroTable;
  city: string;
  coordinates: Coordinates;
  country: string;
  deviceAstroTable: DeviceAstroTable;
  zipCode: string;
  ACL: PurpleACL;
  objectId: ObjectID;
  __type: PurpleType;
  className: AllowedDimCurvesClassName;
}

export interface AstroTable {
  sunrise: string[];
  sunset: string[];
}

export interface DeviceAstroTable {
  legacy: Legacy;
  uniTE: Legacy;
}

export interface Legacy {
  sunrise: number[];
  sunset: number[];
}

export interface SitePermission {
  siteId: string;
  userId: ObjectID;
  user: User;
  locked: boolean;
  isOwner: boolean;
  isInstaller: boolean;
  isUser: boolean;
  createdAt: string;
  updatedAt: string;
  site: SiteSite;
  ACL: PurpleACL;
  objectId: string;
  __type: PurpleType;
  className: string;
}

export interface User {
  profileName: string;
  isInstaller: boolean;
  email: string;
  locale: string;
  username: string;
  hasIntegration: boolean;
  emailVerified: boolean;
  createdAt: string;
  updatedAt: string;
  profile: PlejdMeshClass;
  _failed_login_count: number;
  ACL: UserACL;
  objectId: ObjectID;
  __type: PurpleType;
  className: AllowedDimCurvesClassName;
}

export interface UserACL {
  dtkZ3Ev3DI: DtkZ3Ev3DI;
}

export interface DtkZ3Ev3DI {
  read: boolean;
  write: boolean;
}

export interface StateTimers {
  SafetyTimer: any[];
}
